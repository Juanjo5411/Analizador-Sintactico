PROGRAM -> STATEMENT_LIST
STATEMENT_LIST -> STATEMENT STATEMENT_LIST_PRIME
STATEMENT_LIST_PRIME -> tk_newline STATEMENT_LIST | ε
STATEMENT -> SIMPLE_STMT | COMPOUND_STMT
SIMPLE_STMT -> ASSIGNMENT_STMT
             | EXPRESSION_STMT
             | RETURN_STMT
             | PASS_STMT
             | BREAK_STMT
             | CONTINUE_STMT
             | IMPORT_STMT
             | DEL_STMT
             | GLOBAL_STMT
             | NONLOCAL_STMT
             | ASSERT_STMT
             | YIELD_STMT
             | PRINT_STMT
ASSIGNMENT_STMT -> TARGET ASSIGNMENT_OP EXPRESSION
ASSIGNMENT_OP -> tk_asig | tk_suma_asig | tk_resta_asig | tk_mult_asig | tk_div_asig 
               | tk_mod_asig | tk_and_asig | tk_or_asig | tk_xor_asig | tk_izq_asig 
               | tk_der_asig | tk_exp_asig | tk_floor_div_asig | tk_morsa
TARGET -> id | '(' TARGET ')' | TARGET '.' id | TARGET '[' EXPRESSION ']'
EXPRESSION_STMT -> EXPRESSION
RETURN_STMT -> return [EXPRESSION]
PASS_STMT -> pass
BREAK_STMT -> break
CONTINUE_STMT -> continue
YIELD_STMT -> yield [EXPRESSION]
IMPORT_STMT -> import DOTTED_NAME
             | from DOTTED_NAME import NAME_LIST
DOTTED_NAME -> id DOTTED_NAME_PRIME
DOTTED_NAME_PRIME -> tk_punto id DOTTED_NAME_PRIME | ε
NAME_LIST -> id NAME_LIST_PRIME
NAME_LIST_PRIME -> tk_coma id NAME_LIST_PRIME | ε

DEL_STMT -> del TARGET_LIST
TARGET_LIST -> TARGET TARGET_LIST_PRIME
TARGET_LIST_PRIME -> tk_coma TARGET TARGET_LIST_PRIME | ε

GLOBAL_STMT -> global id ID_LIST
NONLOCAL_STMT -> nonlocal id ID_LIST
ID_LIST -> tk_coma id ID_LIST | ε
ASSERT_STMT -> assert EXPRESSION [tk_coma EXPRESSION]
PRINT_STMT -> print tk_par_izq [EXPRESSION_LIST] tk_par_der
EXPRESSION_LIST -> EXPRESSION EXPRESSION_LIST_PRIME
EXPRESSION_LIST_PRIME -> tk_coma EXPRESSION EXPRESSION_LIST_PRIME | ε
COMPOUND_STMT -> IF_STMT | WHILE_STMT | FOR_STMT | FUNCTION_DEF | CLASS_DEF | TRY_STMT | WITH_STMT
IF_STMT -> if EXPRESSION tk_dos_puntos BLOCK ELIF_STMTS [ELSE_STMT]
ELIF_STMTS -> ELIF_STMT ELIF_STMTS | ε
ELIF_STMT -> elif EXPRESSION tk_dos_puntos BLOCK
ELSE_STMT -> else tk_dos_puntos BLOCK
WHILE_STMT -> while EXPRESSION tk_dos_puntos BLOCK [ELSE_STMT]
FOR_STMT -> for TARGET_LIST in EXPRESSION tk_dos_puntos BLOCK [ELSE_STMT]
FUNCTION_DEF -> def id tk_par_izq [PARAM_LIST] tk_par_der ['->' EXPRESSION] tk_dos_puntos BLOCK
PARAM_LIST -> PARAM PARAM_LIST_PRIME
PARAM_LIST_PRIME -> tk_coma PARAM PARAM_LIST_PRIME | ε
PARAM -> id [':' EXPRESSION]
CLASS_DEF -> class id ['(' [ARGUMENT_LIST] ')'] tk_dos_puntos BLOCK
ARGUMENT_LIST -> ARGUMENT ARGUMENT_LIST_PRIME
ARGUMENT_LIST_PRIME -> tk_coma ARGUMENT ARGUMENT_LIST_PRIME | ε
ARGUMENT -> EXPRESSION
BLOCK -> tk_newline tk_indent STATEMENT_LIST tk_dedent
EXPRESSION -> LOGICAL_OR
LOGICAL_OR -> LOGICAL_AND LOGICAL_OR_PRIME
LOGICAL_OR_PRIME -> tk_or LOGICAL_AND LOGICAL_OR_PRIME | ε

LOGICAL_AND -> NOT_EXPRESSION LOGICAL_AND_PRIME
LOGICAL_AND_PRIME -> tk_and NOT_EXPRESSION LOGICAL_AND_PRIME | ε

NOT_EXPRESSION -> tk_not NOT_EXPRESSION | COMPARISON
COMPARISON -> ARITHMETIC_EXPR COMPARISON_PRIME
COMPARISON_PRIME -> COMP_OPERATOR ARITHMETIC_EXPR COMPARISON_PRIME | ε

COMP_OPERATOR -> tk_menor | tk_mayor | tk_menor_igual | tk_mayor_igual | tk_igual | tk_distinto | in | not in | is | is not
ARITHMETIC_EXPR -> TERM ARITHMETIC_EXPR_PRIME
ARITHMETIC_EXPR_PRIME -> (tk_suma | tk_resta) TERM ARITHMETIC_EXPR_PRIME | ε

TERM -> FACTOR TERM_PRIME
TERM_PRIME -> (tk_multiplicacion | tk_division | tk_floor_div | tk_modulo) FACTOR TERM_PRIME | ε
FACTOR -> (tk_suma | tk_resta | tk_not) FACTOR | POWER
POWER -> PRIMARY POWER_PRIME
POWER_PRIME -> tk_exponente FACTOR | ε

PRIMARY -> id | tk_entero | tk_string | tk_par_izq EXPRESSION tk_par_der | PRIMARY_CALL

PRIMARY_CALL -> PRIMARY tk_par_izq [ARGUMENT_LIST] tk_par_der
ARGUMENT_LIST -> ARGUMENT ARGUMENT_LIST_PRIME
ARGUMENT_LIST_PRIME -> tk_coma ARGUMENT ARGUMENT_LIST_PRIME | ε
ARGUMENT -> EXPRESSION
